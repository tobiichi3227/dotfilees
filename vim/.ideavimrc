syntax enable
set nocompatible
set number
set rnu
set ignorecase
set smartcase
set hlsearch
set incsearch
set autoindent
set tabstop=4
set softtabstop=4
set shiftwidth=4
set backspace=2
set expandtab
set smarttab
set laststatus=2
set showcmd
set showmode
set t_Co=256
set scrolloff=3
set lazyredraw
set foldmethod=manual
set showmatch

let mapleader=","

" Quit insert mode
inoremap jj <ESC>
inoremap jk <ESC>

" Quit visual mode
vnoremap v <ESC>
vnoremap < <gv
vnoremap > >gv
vnoremap <leader>y "+y

nnoremap <leader>v V`}

" Move to the start of line
nnoremap H 0
vnoremap H 0

" Move to the end of line
nnoremap L $
vnoremap L $

nnoremap <leader>s :nohlsearch<CR>
nnoremap <leader>h ^
nnoremap <leader>l g_

vnoremap i1 <esc>`>a)<esc>`<i(<esc>
vnoremap i2 <esc>`>a]<esc>`<i[<esc>
vnoremap i3 <esc>`>a}<esc>`<i{<esc>
vnoremap i4 <esc>`>a"<esc>`<i"<esc>
vnoremap i5 <esc>`>a'<esc>`<i'<esc>
vnoremap i6 <esc>`>a`<esc>`<i`<esc>
vnoremap i7 <esc>`>a><esc>`<i<<esc>

nnoremap <silent> <C-t> :tabnew<CR>
inoremap <silent> <C-t> <Esc>:tabnew<CR>

" automatically clean the extra space at the end of the line when saving file
autocmd BufWritePre * :%s/\s\+$//e

" When editing a file, always jump to the last known cursor position.
" Don't do it for commit messages, when the position is invalid, or when
" inside an event handler (happens when dropping a file on gvim).
autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

function! HideNumber()
    if(&relativenumber == &number)
        set relativenumber! number!
    elseif(&number)
        set number!
    else
        set relativenumber!
    endif
    set number?
endfunc
nnoremap <silent> <F2> :call HideNumber()<CR>

nnoremap ; :

" F4 switch wrap
nnoremap <silent> <F4> :set wrap! wrap?<CR>

func SkipPair()
    if getline('.')[col('.') - 1] == ')' || getline('.')[col('.') - 1] == ']' || getline('.')[col('.') - 1] == '"' || getline('.')[col('.') - 1] == "'" || ge    tline('.')[col('.') - 1] == '}'
         return "\<Esc>la"
    else
        return "\t"
    endif
endfunc

inoremap <TAB> <c-r>=SkipPair()<CR>

